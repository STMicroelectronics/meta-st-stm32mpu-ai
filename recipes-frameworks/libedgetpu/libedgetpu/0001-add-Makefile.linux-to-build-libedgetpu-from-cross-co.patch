From 97001d201b8422bbc4e15a9bc676c5f8833c3b25 Mon Sep 17 00:00:00 2001
From: Vincent ABRIOU <vincent.abriou@st.com>
Date: Tue, 22 Dec 2020 18:07:44 +0100
Subject: [PATCH 1/1] add Makefile.linux to build libedgetpu from cross
 compilation build system

This Makefile build 4 libedgetpu shared libraries with 4 different throttle
configurations:
- libedgetpu_max.so.1.0
- libedgetpu_high.so.1.0
- libedgetpu_med.so.1.0
- libedgetpu_low.so.1.0

Signed-off-by: Vincent ABRIOU <vincent.abriou@st.com>
---
 Makefile.linux | 198 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 198 insertions(+)
 create mode 100644 Makefile.linux

diff --git a/Makefile.linux b/Makefile.linux
new file mode 100644
index 0000000..18c9f99
--- /dev/null
+++ b/Makefile.linux
@@ -0,0 +1,198 @@
+# Copyright 2020 STMicroelectronics
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific langua
+#
+SHELL := /bin/bash
+
+SYSROOT?=""
+MAKEFILE_DIR := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))
+
+SRC_DIR      := $(MAKEFILE_DIR)
+BUILD_DIR    := $(MAKEFILE_DIR)/build
+
+OBJ_DIR_MAX  := $(BUILD_DIR)/obj_max
+OBJ_DIR_HIGH := $(BUILD_DIR)/obj_high
+OBJ_DIR_MED  := $(BUILD_DIR)/obj_med
+OBJ_DIR_LOW  := $(BUILD_DIR)/obj_low
+
+LIB_DIR   := $(BUILD_DIR)/lib
+
+INCLUDES := \
+	-I$(MAKEFILE_DIR)/ \
+	-I$(SYSROOT)/usr/include \
+	-I$(SYSROOT)/usr/include/flatbuffers \
+
+#tflite
+LIBEDGETPU_SRCS := \
+	$(SRC_DIR)/tflite/custom_op.cc \
+	$(SRC_DIR)/tflite/custom_op_data.cc \
+	$(SRC_DIR)/tflite/custom_op_direct.cc \
+	$(SRC_DIR)/tflite/custom_op_user_data_direct.cc \
+	$(SRC_DIR)/tflite/edgetpu_c.cc \
+	$(SRC_DIR)/tflite/edgetpu_context_direct.cc \
+	$(SRC_DIR)/tflite/edgetpu_delegate_for_custom_op.cc \
+	$(SRC_DIR)/tflite/edgetpu_delegate_for_custom_op_tflite_plugin.cc \
+	$(SRC_DIR)/tflite/edgetpu_manager_direct.cc
+#api
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/api/allocated_buffer.cc \
+	$(SRC_DIR)/api/buffer.cc \
+	$(SRC_DIR)/api/driver_factory.cc \
+	$(SRC_DIR)/api/layer_information.cc \
+	$(SRC_DIR)/api/driver_options_helper.cc \
+	$(SRC_DIR)/api/tensor_util.cc \
+	$(SRC_DIR)/api/watchdog.cc
+#driver
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/driver/aligned_allocator.cc \
+	$(SRC_DIR)/driver/allocator.cc \
+	$(SRC_DIR)/driver/device_buffer.cc \
+	$(SRC_DIR)/driver/device_buffer_mapper.cc \
+	$(SRC_DIR)/driver/dma_chunker.cc \
+	$(SRC_DIR)/driver/dma_info.cc \
+	$(SRC_DIR)/driver/dma_info_extractor.cc \
+	$(SRC_DIR)/driver/driver.cc \
+	$(SRC_DIR)/driver/driver_factory.cc \
+	$(SRC_DIR)/driver/driver_factory_default.cc \
+	$(SRC_DIR)/driver/executable_util.cc \
+	$(SRC_DIR)/driver/instruction_buffers.cc \
+	$(SRC_DIR)/driver/package_registry.cc \
+	$(SRC_DIR)/driver/package_verifier.cc \
+	$(SRC_DIR)/driver/request.cc \
+	$(SRC_DIR)/driver/run_controller.cc \
+	$(SRC_DIR)/driver/scalar_core_controller.cc \
+	$(SRC_DIR)/driver/single_queue_dma_scheduler.cc \
+	$(SRC_DIR)/driver/single_tpu_request.cc
+#driver/beagle
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/driver/beagle/beagle_top_level_handler.cc \
+	$(SRC_DIR)/driver/beagle/beagle_top_level_interrupt_manager.cc \
+	$(SRC_DIR)/driver/beagle/beagle_usb_driver_provider.cc
+#driver/interrupt
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/driver/interrupt/grouped_interrupt_controller.cc \
+	$(SRC_DIR)/driver/interrupt/interrupt_controller.cc \
+	$(SRC_DIR)/driver/interrupt/top_level_interrupt_manager.cc
+#driver/memory
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/driver/memory/nop_address_space.cc
+#driver/register
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/driver/registers/registers.cc
+#driver/usb
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/driver/usb/libusb_options_default.cc \
+	$(SRC_DIR)/driver/usb/local_usb_device.cc \
+	$(SRC_DIR)/driver/usb/usb_driver.cc \
+	$(SRC_DIR)/driver/usb/usb_dfu_commands.cc \
+	$(SRC_DIR)/driver/usb/usb_dfu_util.cc \
+	$(SRC_DIR)/driver/usb/usb_io_request.cc \
+	$(SRC_DIR)/driver/usb/usb_ml_commands.cc \
+	$(SRC_DIR)/driver/usb/usb_registers.cc \
+	$(SRC_DIR)/driver/usb/usb_standard_commands.cc
+#driver_shared/time_stamper
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/driver_shared/time_stamper/driver_time_stamper.cc
+#port
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/port/shared_mutex.cc \
+	$(SRC_DIR)/port/blocking_counter.cc \
+	$(SRC_DIR)/port/timer_linux.cc
+#port/default
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/port/default/stringprintf.cc
+#port/default/port_from_tf
+LIBEDGETPU_SRCS += \
+	$(SRC_DIR)/port/default/port_from_tf/logging.cc \
+	$(SRC_DIR)/port/default/port_from_tf/status.cc \
+	$(SRC_DIR)/port/default/port_from_tf/statusor.cc
+
+LIBEDGETPU_OBJS_MAX  := $(addprefix $(OBJ_DIR_MAX),  $(patsubst %.cc,%.o,$(LIBEDGETPU_SRCS)))
+LIBEDGETPU_OBJS_HIGH := $(addprefix $(OBJ_DIR_HIGH), $(patsubst %.cc,%.o,$(LIBEDGETPU_SRCS)))
+LIBEDGETPU_OBJS_MED  := $(addprefix $(OBJ_DIR_MED), $(patsubst %.cc,%.o,$(LIBEDGETPU_SRCS)))
+LIBEDGETPU_OBJS_LOW  := $(addprefix $(OBJ_DIR_LOW), $(patsubst %.cc,%.o,$(LIBEDGETPU_SRCS)))
+
+#CXX cross-compilator flags
+CXXFLAGS := -O3 -DNDEBUG -fPIC
+CXXFLAGS += --std=c++11
+CXXFLAGS += $(LIBEDGETPU_EXTRA_CXXFLAGS)
+CXXFLAGS += $(INCLUDES)
+
+#Mimic the Bazel build --define darwinn_portable=1
+CXXFLAGS += -DDARWINN_PORT_DEFAULT
+
+ABSL_LDFLAGS  = -Wl,--whole-archive -labsl_base -labsl_debugging_internal \
+	-labsl_demangle_internal -labsl_flags -labsl_flags_config \
+	-labsl_flags_handle -labsl_flags_internal -labsl_flags_registry \
+	-labsl_flags_marshalling -labsl_graphcycles_internal -labsl_int128 \
+	-labsl_malloc_internal -labsl_spinlock_wait -labsl_stacktrace \
+	-labsl_str_format_internal -labsl_strings -labsl_strings_internal \
+	-labsl_symbolize -labsl_synchronization -labsl_throw_delegate \
+	-labsl_time -labsl_time_zone -Wl,--no-whole-archive
+
+TFLITE_LDFLAGS =  -Wl,--whole-archive -ltensorflow-lite -Wl,--no-whole-archive
+
+#Linker Flags
+LDFLAGS  = -L${SYSROOT}/lib
+LDFLAGS += -L${SYSROOT}/usr/lib
+LDFLAGS += -lpthread -lusb-1.0 $(ABSL_LDFLAGS) $(TFLITE_LDFLAGS)
+
+# VAB to check the linker file
+LIBEDGETPU_LINKER_FILE := $(SRC_DIR)/tflite/public/libedgetpu.lds
+#LDFLAGS  += -T $(LIBEDGETPU_LINKER_FILE)
+
+LIB_NAME_MAX  := libedgetpu-max.so.%%VERSION%%
+LIB_NAME_HIGH := libedgetpu-high.so.%%VERSION%%
+LIB_NAME_MED  := libedgetpu-med.so.%%VERSION%%
+LIB_NAME_LOW  := libedgetpu-low.so.%%VERSION%%
+
+LIB_PATH_MAX  := $(LIB_DIR)/$(LIB_NAME_MAX)
+LIB_PATH_HIGH := $(LIB_DIR)/$(LIB_NAME_HIGH)
+LIB_PATH_MED  := $(LIB_DIR)/$(LIB_NAME_MED)
+LIB_PATH_LOW  := $(LIB_DIR)/$(LIB_NAME_LOW)
+
+all: $(LIB_PATH_MAX) $(LIB_PATH_HIGH) $(LIB_PATH_MED) $(LIB_PATH_LOW)
+
+$(OBJ_DIR_MAX)%.o: %.cc
+	@mkdir -p $(dir $@)
+	$(CXX) $(CXXFLAGS) -c $< -o $@
+
+$(LIB_PATH_MAX): $(LIBEDGETPU_OBJS_MAX)
+	@mkdir -p $(dir $@)
+	$(CXX) -shared $(LDFLAGS) $^ -o $@ -Wl,-soname,$(LIB_NAME_MAX)
+
+$(OBJ_DIR_HIGH)%.o: %.cc
+	@mkdir -p $(dir $@)
+	$(CXX) $(CXXFLAGS) -DTHROTTLE_EDGE_TPU=1 -c $< -o $@
+
+$(LIB_PATH_HIGH): $(LIBEDGETPU_OBJS_HIGH)
+	@mkdir -p $(dir $@)
+	$(CXX) -shared $(LDFLAGS) $^ -o $@ -Wl,-soname,$(LIB_NAME_HIGH)
+
+$(OBJ_DIR_MED)%.o: %.cc
+	@mkdir -p $(dir $@)
+	$(CXX) $(CXXFLAGS) -DTHROTTLE_EDGE_TPU=2 -c $< -o $@
+
+$(LIB_PATH_MED): $(LIBEDGETPU_OBJS_MED)
+	@mkdir -p $(dir $@)
+	$(CXX) -shared $(LDFLAGS) $^ -o $@ -Wl,-soname,$(LIB_NAME_MED)
+
+$(OBJ_DIR_LOW)%.o: %.cc
+	@mkdir -p $(dir $@)
+	$(CXX) $(CXXFLAGS) -DTHROTTLE_EDGE_TPU=3 -c $< -o $@
+
+$(LIB_PATH_LOW): $(LIBEDGETPU_OBJS_LOW)
+	@mkdir -p $(dir $@)
+	$(CXX) -shared $(LDFLAGS) $^ -o $@ -Wl,-soname,$(LIB_NAME_LOW)
+
+clean:
+	rm -rf $(BUILD_DIR)
-- 
2.17.1

